apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-config
  namespace: sock-shop
data:
  script.js: |
    import http from "k6/http";
    import { sleep } from "k6";
    export let options = {
        vus: 5,
        stages: [
            { duration: "1m", target: 50 },
            { duration: "1m", target: 256 },
            { duration: "1m", target: 512 },
            { duration: "5m", target: 1024 },
            { duration: "1m", target: 5 },
        ]
    };
    export default function() {
      let response = http.get("http://front-end:80");
      sleep(Math.random() * 3 + 2);
    };

---
apiVersion: batch/v1
kind: Job
metadata:
  name: k6
  namespace: sock-shop
spec:
  ttlSecondsAfterFinished: 900
  parallelism: 1
  completions: 10
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: k6
        image: docker.io/ehazlett/k6:latest
        args: ["k6", "run", "/etc/scripts/script.js"]
        volumeMounts:
        - name: k6-config
          mountPath: /etc/scripts/
          readOnly: true
      volumes:
        - name: k6-config
          configMap:
            name: k6-config
